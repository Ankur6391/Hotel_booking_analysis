# -*- coding: utf-8 -*-
"""untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Ankur6391/3d0c1990045c70ea70f62ac49b0e291b/untitled1.ipynb
"""

import pandas as pd
import matplotlib. pyplot as plt
import seaborn as sns

a=pd.read_csv("/content/hotel_booking.csv")
a.head(3)

a.tail(3)

a.shape

a.info()

a.isnull().sum()

a.drop(["company"],axis=1,inplace=True)
a.drop(["agent"],axis=1,inplace=True)

a.dropna(inplace=True)

a.describe()

can=a["is_canceled"].value_counts(normalize=True)*100
print(can)

plt.figure(figsize=(6, 5))
plt.title("Cancellation Rate",color="r")
sns.countplot(x="is_canceled", data=a).set_xticklabels(["not canceled", "canceled"])
plt.show()

plt.figure(figsize=(6, 5))
plt.title("Cancellation Rate",color="r")
sns.countplot(x="hotel", hue="is_canceled", data=a,color="orange").set_xticklabels(["Resort Hotel", "City Hotel"])
plt.legend(["not canceled", "canceled"])
plt.ylabel("number of resevation")
plt.show()
#

a["reservation_status_date"] = pd.to_datetime(a["reservation_status_date"])

resort_hotel=a[a["hotel"]=="Resort Hotel"]
resort_hotel["is_canceled"].value_counts(normalize=True)*100
#

city_hotel=a[a["hotel"]=="City Hotel"]
city_hotel["is_canceled"].value_counts(normalize=True)*100
#

resort_hotel = resort_hotel.groupby("reservation_status_date")[["adr"]].mean()
city_hotel = city_hotel.groupby("reservation_status_date")[["adr"]].mean()

plt.figure(figsize=(20, 10))
plt.title("Average Daily Rate in city and res_hotel",color="r",fontsize=13)
plt.plot(resort_hotel.index, resort_hotel["adr"], label="Resort Hotel")
plt.plot(city_hotel.index, city_hotel["adr"], label="City Hotel")
plt.legend(fontsize=13)
plt.xlabel("reservation_ststus_date",size=15)
plt.ylabel("Average Daily Rate",size=20)
plt.show()

a["month"] = a["reservation_status_date"].dt.month

plt.figure(figsize=(18, 9))
sns.countplot(x="month", hue="is_canceled", data=a, palette="rocket")
plt.legend(["not canceled", "canceled"],fontsize=16)
plt.xlabel("month",size=15)
plt.ylabel("number of resevation",size=15)
plt.show()

plt.figure(figsize=(18, 9))
sns.borplott(x="month", "adrffffgfgf", data=a, palette="rocket")

canceled_data=a[a["is_canceled"]==1]
top_10_country=canceled_data["country"].value_counts()[:10]
plt.figure(figsize=(18, 9))
sns.barplot(x=top_10_country.index, y=top_10_country.values, palette="rocket")
plt.xlabel("country",size=15)
plt.ylabel("number of resevation",size=15)
plt.show()

a["market_segment"].value_counts()
#

a["market_segment"].value_counts(normalize=True)c

canceled_data['market_segment'].value_counts(normalize=True)

# The original code was trying to group by "reservation_status_data"
# It is likely that you meant "reservation_status_date"
canceled_data_adr=canceled_data.groupby("reservation_status_date")[["adr"]].mean()
canceled_data_adr.reset_index(inplace=True)
canceled_data_adr.sort_values("reservation_status_date",inplace=True) # Also fixed here


not_canceled_data=a[a["is_canceled"]==0]
# The original code was trying to group by "reservation_status_data"
# It is likely that you meant "reservation_status_date"
not_canceled_data_adr=not_canceled_data.groupby("reservation_status_date")[["adr"]].mean()
not_canceled_data_adr.reset_index(inplace=True)
# Also fixed here
not_canceled_data_adr.sort_values("reservation_status_date",inplace=True)
#

plt.figure(figsize=(18, 9))
plt.plot(not_canceled_data_adr["reservation_status_date"],not_canceled_data_adr[["adr"]],label="not canceled")
plt.plot(canceled_data_adr["reservation_status_date"],canceled_data_adr[["adr"]],label="canceled")
plt.legend()
plt.xlabel("market_segment",size=15)
plt.ylabel("Average Daily Rate",size=15)
plt.show()

